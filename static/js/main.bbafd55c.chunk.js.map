{"version":3,"sources":["TaskCard.js","Column.js","App.js","serviceWorker.js","index.js"],"names":["left","className","width","height","viewBox","fill","xmlns","fillRule","d","right","up","down","deleteCross","TaskCard","props","useState","taskEdit","setTaskEdit","id","task","type","value","name","onChange","e","target","onClick","onTaskSave","disabled","trim","status","changeStatus","direction","priority","Column","tasks","filter","el","sort","a","b","map","key","taskArray","uuidv4","App","isOpenCreateTaskForm","setIsOpenCreateTaskForm","taskInput","setTaskInput","isActiveButtonTaskCreate","setIsActiveButtonTaskCreate","setTasks","taskReset","updatedTasks","statuses","priorities","indexOf","length","preventDefault","copyTasks","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bbafd55c.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst left = (<svg className=\"bi bi-arrow-left\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\"\n        d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\n  <path fillRule=\"evenodd\" d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\n</svg>);\n\nconst right = (<svg className=\"bi bi-arrow-right\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\"\n        d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"/>\n  <path fillRule=\"evenodd\" d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"/>\n</svg>);\n\nconst up = (<svg className=\"bi bi-arrow-up-short\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M8 5.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5z\"/>\n  <path fillRule=\"evenodd\"\n        d=\"M7.646 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8 5.707 5.354 8.354a.5.5 0 1 1-.708-.708l3-3z\"/>\n</svg>);\n\nconst down = (<svg className=\"bi bi-arrow-down-short\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\"\n        d=\"M4.646 7.646a.5.5 0 0 1 .708 0L8 10.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\"/>\n  <path fillRule=\"evenodd\" d=\"M8 4.5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5z\"/>\n</svg>);\n\nconst deleteCross = (<svg className=\"bi bi-x\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n  <path fillRule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n</svg>);\n\nfunction TaskCard(props) {\n\n  // пакет для task name change\n  const [taskEdit, setTaskEdit] = useState({});\n  const editMode = (task) => { setTaskEdit(task); };\n  const onEditTaskChange = (e) => { setTaskEdit({ ...taskEdit, name: e.target.value }); };\n  const taskSave = () => {\n    props.onTaskSave(taskEdit);\n    setTaskEdit({});\n  };\n  // -----\n\n  return (\n    <div className=\"card mb-3 mr-1 ml-1\">\n\n      {taskEdit.id === props.task.id ? (\n        <>\n          <input\n            type=\"text\"\n            value={taskEdit.name}\n            onChange={onEditTaskChange}\n          />\n          <button onClick={taskSave} disabled={!taskEdit.name.trim()}>\n            Save\n          </button>\n        </>\n      ) : (\n        <span onClick={() => editMode(props.task)}>{props.task.name}</span>\n      )}\n\n      {props.task.status!=='todo' &&\n        <span onClick={() => props.changeStatus({id: props.task.id, direction: 'left'})}\n        >{left}</span>}\n\n      {props.task.status!=='done' &&\n        <span onClick={() => props.changeStatus({id: props.task.id, direction: 'right'})}\n        >{right}</span>}\n\n      {props.task.priority!==0 &&\n      <span onClick={() => props.changeStatus({id: props.task.id, direction: 'up'})}\n      >{up}</span>}\n\n      {props.task.priority!==3 &&\n      <span onClick={() => props.changeStatus({id: props.task.id, direction: 'down'})}\n      >{down}</span>}\n\n      <span onClick={() => props.changeStatus({id: props.task.id, direction: 'delete'})}\n      >{deleteCross}</span>\n\n      {props.task.priority===0 &&\n        <p className=\"urgent\">urgent</p>\n      }\n      {props.task.priority===1 &&\n        <p className=\"high\">high</p>\n      }\n      {props.task.priority===2 &&\n        <p className=\"medium\">normal</p>\n      }\n      {props.task.priority===3 &&\n        <p className=\"low\">low</p>\n      }\n    </div>\n  );\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport TaskCard from \"./TaskCard\";\n\nfunction Column(props) {\n  return (\n    <div>\n      {props.tasks\n        .filter(el => el.status === props.status)\n        .sort((a, b) => a.priority - b.priority)\n        .map(el => <TaskCard\n          key={el.id}\n          task={el}\n          changeStatus={props.changeStatus}\n          onTaskSave={props.onTaskSave}\n        />)}\n    </div>\n  );\n}\n\nexport default Column;\n","import React, {useState} from 'react';\nimport './App.css';\nimport Column from \"./Column\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst taskArray = [\n  { id: uuidv4(), name: 'Read to children', priority: 0, status: 'todo'},\n  { id: uuidv4(), name: 'Check bank', priority: 1, status: 'progress'},\n  { id: uuidv4(), name: 'Plan next week', priority: 2, status: 'review'},\n  { id: uuidv4(), name: 'Quality control', priority: 3, status: 'review'}\n]\n\n//const colors     = ['violet', 'red', 'yellow', 'green'];\n\nfunction App() {\n\n  const [isOpenCreateTaskForm, setIsOpenCreateTaskForm]         = useState(false);\n  // определяет, какую группу кнопок показывать наверху\n  const [taskInput, setTaskInput]                               = useState('');\n  // название таски\n  const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\n  // горит ли кнопка создать таску\n  const [tasks, setTasks]                                       = useState(taskArray);\n\n  const openCreateTaskForm = () => {     // меняет группу кнопок наверху\n    setIsOpenCreateTaskForm(true);\n  };\n  const onTaskChange = (e) => {          // вводит имя задачи в инпуте\n    setIsActiveButtonTaskCreate(e.target.value.length > 4);\n    setTaskInput(e.target.value);\n  };\n  const taskSubmit = (e) => {            // нажата кнопки \"создать таску\"\n    e.preventDefault();\n    let copyTasks = [...tasks];\n    copyTasks.push({ id: uuidv4(), name: taskInput, priority: 2, status: 'todo'});\n    setTasks(copyTasks);\n    taskReset();\n  };\n  const taskReset = () => {              // сбросить весь верх в начальное положение\n    setTaskInput('');\n    setIsOpenCreateTaskForm(false);\n    setIsActiveButtonTaskCreate(false);\n  };\n\n  // для name change\n  const onTaskSave = (task) => {\n    const updatedTasks = tasks.map((el) => {\n      if (el.id === task.id) return { ...el, name: task.name };\n      else return el;\n    });\n    setTasks(updatedTasks);\n  };\n  // ------\n\n  const changeStatus = ({id, direction}) => {\n    const statuses = ['todo', 'progress', 'review', 'done'];\n    const priorities = [0, 1, 2, 3];\n    let updatedTasks = tasks;\n\n    if (direction==='delete') updatedTasks = updatedTasks.filter(el => el.id !== id);\n\n    updatedTasks = updatedTasks.map(el => {\n      if (el.id===id) {\n        if (direction==='left')  el.status   = statuses[statuses.indexOf(el.status)-1];\n        if (direction==='right') el.status   = statuses[statuses.indexOf(el.status)+1];\n        if (direction==='up')    el.priority = priorities[priorities.indexOf(el.priority)-1];\n        if (direction==='down')  el.priority = priorities[priorities.indexOf(el.priority)+1];\n        return el;\n      }\n      else return el;\n    });\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"mb-3\">Kanban Board</h1>\n\n        {!isOpenCreateTaskForm &&\n        <button className=\"btn btn-primary\" onClick={openCreateTaskForm}>New Task</button>\n        }\n\n        {isOpenCreateTaskForm &&\n        <form>\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control\"\n                   value={taskInput}\n                   onChange={onTaskChange} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\"\n                  onClick={taskSubmit}\n                  disabled={!isActiveButtonTaskCreate}>Submit\n          </button>\n          <button className=\"btn btn-secondary mx-2\"\n                  onClick={taskReset}\n          >Cancel\n          </button>\n        </form>\n        }\n        <div className=\"row mt-3\">\n          <div className=\"col-sm greyColumn mr-2\">\n            <h4 className=\"mt-3 mb-3\">To Do</h4>\n            <Column tasks={tasks} status={'todo'} changeStatus={changeStatus} onTaskSave={onTaskSave}/>\n          </div>\n          <div className=\"col-sm greyColumn mr-2 ml-2\">\n            <h4 className=\"mt-3 mb-3\">In Progress</h4>\n            <Column tasks={tasks} status={'progress'} changeStatus={changeStatus} onTaskSave={onTaskSave}/>\n          </div>\n          <div className=\"col-sm greyColumn mr-2 ml-2\">\n            <h4 className=\"mt-3 mb-3\">Review</h4>\n            <Column tasks={tasks} status={'review'} changeStatus={changeStatus} onTaskSave={onTaskSave}/>\n          </div>\n          <div className=\"col-sm greyColumn mr-2 ml-2\">\n            <h4 className=\"mt-3 mb-3\">Done</h4>\n            <Column tasks={tasks} status={'done'} changeStatus={changeStatus} onTaskSave={onTaskSave}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n\n\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}